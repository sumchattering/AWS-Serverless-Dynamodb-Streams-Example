service: serverless-dynamodb-streams-example 

plugins:
  - serverless-bundle
  - serverless-dynamodb-local
  - serverless-offline

custom:
  stage: ${opt:stage, self:provider.stage}
  tableName: tasks-${self:custom.stage}
  environment: ${file(config/${self:custom.stage}-env.json)}
  dynamodb:
    stages:
      - ${self:custom.stage}

package:
  individually: true
  exclude:
    - dev-env.json
    - prod-env.json
    - node_modules/aws-sdk/**

provider:
  name: aws
  stage: dev
  runtime: nodejs8.10
  region: eu-central-1
  environment:
    tableName: ${self:custom.tableName}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeStream
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:ListStreams
      Resource: 
        - "Fn::GetAtt": [ TasksDynamoDbTable, Arn ]

functions:
  createTask:
    handler: handler.createTask
    events:
      - http:
          path: createTask
          method: post
  listTasks:
    handler: handler.listTasks
    events:
      - http:
          path: listTasks
          method: get
  processTasksStream:
    handler: handler.processTasksStream
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - TasksDynamoDbTable
              - StreamArn
          batchSize: 1
    
resources:
  Resources:
    TasksDynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Delete
      Properties:
        TableName: '${self:custom.tableName}'
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES